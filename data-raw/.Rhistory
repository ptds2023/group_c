# Healthcare
grepl("Healthcare", Expenses) ~ "Healthcare",
# Communications
grepl("Communications", Expenses) ~ "Communications",
# Alimony and child support
grepl("Alimony and child support", Expenses) ~ "Alimony and child support",
# Alcoholic drinks and tobacco
grepl("Alcoholic drinks and tobacco", Expenses) ~ "Alcoholic drinks and tobacco",
# Current household expenses
grepl("Home administration|Other goods and services|Clothing and shoes", Expenses) ~ "Current household expenses",
# School
grepl("School and education", Expenses) ~ "School",
# Default category (for anything not matched)
TRUE ~ "Other"
))
as.numeric("Per month (average)")
as.numeric("Portion of budget")
grouped_table <- budget_table %>%
group_by(Category) %>%
summarise(
Expenses = sum(`Per month (average)`),
`Per month (average)` = sum(`Per month (average)` * `Expenses`) / sum(`Expenses`),
`Portion of budget` = sum(`Portion of budget`)
)
grouped_table <- budget_table %>%
group_by(Category) %>%
summarise(
`Per month (average)` = sum(`Per month (average)` * `Expenses`) / sum(`Expenses`),
`Portion of budget` = sum(`Portion of budget`)
)
grouped_table <- budget_table %>%
group_by(Category) %>%
summarise(
`Per month (average)` = sum(`Per month (average)`),
`Portion of budget` = sum(`Portion of budget`)
)
View(grouped_table)
library(rvest)
library(kableExtra)
library(dplyr)
# https://www.moneyland.ch/robots.txt, no mention of webscraping forbidden.
# The ToS mention this : "The content may be viewed or printed, provided that it is intended exclusively for personal, non-commercial use."
# Webscraping seems to be authorized.
# Web scrape the moneyland website
url <- "https://www.moneyland.ch/en/money-budget-household-savings-switzerland"
budget_table <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
# Print the table using kableExtra
kableExtra::kable(budget_table, format = "html")
# Let's now perform some data wrangling to create new categories that make more sense
budget_table <- budget_table %>%
mutate(Category = case_when(
# Insurances & AVS
grepl("Mandatory contributions |Various fees|Other insurances|Life insurance", Expenses) ~ "Insurances & AVS",
# Rent
grepl("Housing and utilities \\(primary residence\\)|Homemaking|Housing and utilities \\(secondary residence\\)", Expenses) ~ "Rent",
# Food & Beverage
grepl("Groceries|Soft drinks", Expenses) ~ "Food & Beverage",
# Leisure
grepl("Entertainment, recreation, and cultural activities|Travel accommodations|Donations, gifts, hosting", Expenses) ~ "Leisure",
# Transport
grepl("Vehicle purchases and maintenance|Other transportation costs", Expenses) ~ "Transport",
# Healthcare
grepl("Healthcare", Expenses) ~ "Healthcare",
# Communications
grepl("Communications", Expenses) ~ "Communications",
# Alimony and child support
grepl("Alimony and child support", Expenses) ~ "Alimony and child support",
# Alcoholic drinks and tobacco
grepl("Alcoholic drinks and tobacco", Expenses) ~ "Alcoholic drinks and tobacco",
# Current household expenses
grepl("Home administration|Other goods and services|Clothing and shoes", Expenses) ~ "Current household expenses",
# School
grepl("School and education", Expenses) ~ "School",
# Default category (for anything not matched)
TRUE ~ "Other"
))
# Convert columns 2 & 3 into numeric
as.numeric("Per month (average)")
as.numeric("Portion of budget")
new_budget_table <- budget_table %>%
group_by(Category) %>%
summarise(
`Per month (average)` = sum(`Per month (average)`),
`Portion of budget` = sum(`Portion of budget`)
)
# Creation of a new table with the final categories, and the final amounts
new_budget_table <- budget_table %>%
group_by(Category) %>%
summarise(
`Per month (average)` = sum(`Per month (average)`),
`Portion of budget` = sum(`Portion of budget`)
)
# Creation of a new table with the final categories, and the final amounts
new_budget_table <- budget_table %>%
group_by(Category) %>%
summarise(
`Per month (average)` = sum(`Per month (average)`),
`Portion of budget` = sum(`Portion of budget`)
)
library(rvest)
library(kableExtra)
library(dplyr)
# https://www.moneyland.ch/robots.txt, no mention of webscraping forbidden.
# The ToS mention this : "The content may be viewed or printed, provided that it is intended exclusively for personal, non-commercial use."
# Webscraping seems to be authorized.
# Web scrape the moneyland website
url <- "https://www.moneyland.ch/en/money-budget-household-savings-switzerland"
budget_table <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
# Print the table using kableExtra
kableExtra::kable(budget_table, format = "html")
# Let's now perform some data wrangling to create new categories that make more sense
budget_table <- budget_table %>%
mutate(Category = case_when(
# Insurances & AVS
grepl("Mandatory contributions |Various fees|Other insurances|Life insurance", Expenses) ~ "Insurances & AVS",
# Rent
grepl("Housing and utilities \\(primary residence\\)|Homemaking|Housing and utilities \\(secondary residence\\)", Expenses) ~ "Rent",
# Food & Beverage
grepl("Groceries|Soft drinks", Expenses) ~ "Food & Beverage",
# Leisure
grepl("Entertainment, recreation, and cultural activities|Travel accommodations|Donations, gifts, hosting", Expenses) ~ "Leisure",
# Transport
grepl("Vehicle purchases and maintenance|Other transportation costs", Expenses) ~ "Transport",
# Healthcare
grepl("Healthcare", Expenses) ~ "Healthcare",
# Communications
grepl("Communications", Expenses) ~ "Communications",
# Alimony and child support
grepl("Alimony and child support", Expenses) ~ "Alimony and child support",
# Alcoholic drinks and tobacco
grepl("Alcoholic drinks and tobacco", Expenses) ~ "Alcoholic drinks and tobacco",
# Current household expenses
grepl("Home administration|Other goods and services|Clothing and shoes", Expenses) ~ "Current household expenses",
# School
grepl("School and education", Expenses) ~ "School",
# Default category (for anything not matched)
TRUE ~ "Other"
))
# Convert columns 2 & 3 into numeric to be able to sum the values
as.numeric("Per month (average)")
as.numeric("Portion of budget")
# Creation of a new table with the final categories, and the final amounts
new_budget_table <- budget_table %>%
group_by(Category) %>%
summarise(
`Per month (average)` = sum(`Per month (average)`),
`Portion of budget` = sum(`Portion of budget`)
)
new_budget_table <- budget_table %>%
group_by(Category) %>%
summarise(
`Per month (average)` = sum(`Per month (average)`),
`Portion of budget` = sum(`Portion of budget`)
)
budget_table <- lapply(budget_table, function(df) {
df <- as.data.frame(df)
df <- df %>%
mutate(
`Per month (average)` = as.numeric(gsub("CHF", "", `Per month (average)`)),
`Portion of budget` = as.numeric(gsub("%", "", `Portion of budget`))
)
return(df)
})
as.numeric("Per month (average)")
as.numeric("Portion of budget")
as.numeric("Per month (average)")
as.numeric("Portion of budget")
new_budget_table <- budget_table %>%
group_by(Category) %>%
summarise(
`Per month (average)` = sum(`Per month (average)`),
`Portion of budget` = sum(`Portion of budget`)
)
library(rvest)
library(kableExtra)
library(dplyr)
url <- "https://www.moneyland.ch/en/money-budget-household-savings-switzerland"
budget_table <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
# Print the table using kableExtra
kableExtra::kable(budget_table, format = "html")
budget_table <- budget_table %>%
mutate(Category = case_when(
# Insurances & AVS
grepl("Mandatory contributions |Various fees|Other insurances|Life insurance", Expenses) ~ "Insurances & AVS",
# Rent
grepl("Housing and utilities \\(primary residence\\)|Homemaking|Housing and utilities \\(secondary residence\\)", Expenses) ~ "Rent",
# Food & Beverage
grepl("Groceries|Soft drinks", Expenses) ~ "Food & Beverage",
# Leisure
grepl("Entertainment, recreation, and cultural activities|Travel accommodations|Donations, gifts, hosting", Expenses) ~ "Leisure",
# Transport
grepl("Vehicle purchases and maintenance|Other transportation costs", Expenses) ~ "Transport",
# Healthcare
grepl("Healthcare", Expenses) ~ "Healthcare",
# Communications
grepl("Communications", Expenses) ~ "Communications",
# Alimony and child support
grepl("Alimony and child support", Expenses) ~ "Alimony and child support",
# Alcoholic drinks and tobacco
grepl("Alcoholic drinks and tobacco", Expenses) ~ "Alcoholic drinks and tobacco",
# Current household expenses
grepl("Home administration|Other goods and services|Clothing and shoes", Expenses) ~ "Current household expenses",
# School
grepl("School and education", Expenses) ~ "School",
# Default category (for anything not matched)
TRUE ~ "Other"
))
View(budget_table)
as.numeric("Per month (average)")
as.numeric("Portion of budget")
new_budget_table <- budget_table %>%
group_by(Category) %>%
summarise(
`Per month (average)` = sum(`Per month (average)`),
`Portion of budget` = sum(`Portion of budget`)
)
budget_table <- budget_table %>%
mutate(Category = case_when(
# Insurances & AVS
grepl("Mandatory contributions |Various fees|Other insurances|Life insurance", Expenses) ~ "Insurances & AVS",
# Rent
grepl("Housing and utilities \\(primary residence\\)|Homemaking|Housing and utilities \\(secondary residence\\)", Expenses) ~ "Rent",
# Food & Beverage
grepl("Groceries|Soft drinks", Expenses) ~ "Food & Beverage",
# Leisure
grepl("Entertainment, recreation, and cultural activities|Travel accommodations|Donations, gifts, hosting", Expenses) ~ "Leisure",
# Transport
grepl("Vehicle purchases and maintenance|Other transportation costs", Expenses) ~ "Transport",
# Healthcare
grepl("Healthcare", Expenses) ~ "Healthcare",
# Communications
grepl("Communications", Expenses) ~ "Communications",
# Alimony and child support
grepl("Alimony and child support", Expenses) ~ "Alimony and child support",
# Alcoholic drinks and tobacco
grepl("Alcoholic drinks and tobacco", Expenses) ~ "Alcoholic drinks and tobacco",
# Current household expenses
grepl("Home administration|Other goods and services|Clothing and shoes", Expenses) ~ "Current household expenses",
# School
grepl("School and education", Expenses) ~ "School",
# Default category (for anything not matched)
TRUE ~ "Other"
))
budget_table <- lapply(budget_table, function(df) {
df <- as.data.frame(df)
df <- df %>%
mutate(
`Per month (average)` = as.numeric(gsub("CHF", "", `Per month (average)`)),
`Portion of budget` = as.numeric(gsub("%", "", `Portion of budget`))
)
return(df)
})
rlang::last_trace()
budget_table <- lapply(budget_table, function(df) {
df <- as.data.frame(df)
df <- df %>%
mutate(
`Per month (average)` = as.numeric(gsub("CHF", "", `Per month (average)`, fixed = TRUE)),
`Portion of budget` = as.numeric(gsub("%", "", `Portion of budget`, fixed = TRUE))
)
return(df)
})
budget_table <- lapply(budget_table, function(df) {
df <- as.data.frame(df)
df <- df %>%
rename(
Per_month_average = `Per month (average)`,
Portion_of_budget = `Portion of budget`
) %>%
mutate(
Per_month_average = as.numeric(gsub("CHF", "", Per_month_average, fixed = TRUE)),
Portion_of_budget = as.numeric(gsub("%", "", Portion_of_budget, fixed = TRUE))
)
return(df)
})
budget_table <- rename(
Per_month_average = `Per month (average)`,
Portion_of_budget = `Portion of budget`
) %>%
mutate(
Per_month_average = as.numeric(gsub("CHF", "", Per_month_average, fixed = TRUE)),
Portion_of_budget = as.numeric(gsub("%", "", Portion_of_budget, fixed = TRUE))
)
budget_table <- lapply(budget_table, function(df) {
df <- as.data.frame(df)
df <- df %>%
rename(
Per_month_average = `Per month (average)`,
Portion_of_budget = `Portion of budget`
)
return(df)
})
kableExtra::kable(budget_table, format = "csv")
library(rvest)
library(kableExtra)
library(dplyr)
library(rvest)
library(kableExtra)
library(dplyr)
# https://www.moneyland.ch/robots.txt, no mention of webscraping forbidden.
# The ToS mention this : "The content may be viewed or printed, provided that it is intended exclusively for personal, non-commercial use."
# Webscraping seems to be authorized.
# Web scrape the moneyland website
url <- "https://www.moneyland.ch/en/money-budget-household-savings-switzerland"
budget_table <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
# Print the table using kableExtra
kableExtra::kable(budget_table, format = "html")
url <- "https://www.moneyland.ch/en/money-budget-household-savings-switzerland"
budget_table <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
View(budget_table)
library(rvest)
library(kableExtra)
# https://www.moneyland.ch/robots.txt, no mention of webscraping forbidden.
# The ToS mention this : "The content may be viewed or printed, provided that it is intended exclusively for personal, non-commercial use."
# Webscraping seems to be authorized.
# Web scrape the moneyland website
url <- "https://www.moneyland.ch/en/money-budget-household-savings-switzerland"
budget_table <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
# Print the table using kableExtra
kableExtra::kable(budget_table, format = "html")
View(budget_table)
View(budget_table)
str(budget_table)
# 1. Rename colnames
colnames(budget_table) <- c("Expenses", "Total_CH", "Total_Percentage")
# 2. Group expense types
budget_table <- budget_table %>%
mutate(Grouped_Expenses = case_when(
Expenses %in% c("Mandatory contributions (OASI, etc.)", "Various fees", "Other insurances", "Life insurance") ~ "Insurances & AVS",
Expenses %in% c("Housing and utilities (primary residence)", "Homemaking", "Housing and utilities (secondary residence)") ~ "Rent",
Expenses %in% c("Groceries", "Soft drinks") ~ "Food & Beverage",
Expenses %in% c("Entertainment, recreation, and cultural activities", "Travel accommodations", "Donations, gifts, hosting") ~ "Leisure",
Expenses %in% c("Vehicle purchases and maintenance", "Other transportation costs") ~ "Transport",
Expenses == "Healthcare" ~ "Healthcare",
Expenses == "Communications" ~ "Communications",
Expenses == "Alimony and child support" ~ "Alimony and child support",
Expenses == "Alcoholic drinks and tobacco" ~ "Alcoholic drinks and tobacco",
Expenses %in% c("Home administration", "Other goods and services", "Clothing and shoes") ~ "Current household expenses",
Expenses == "School and education" ~ "School",
TRUE ~ as.character(Expenses)
))
library(rvest) # for webscraping
library(kableExtra) # for data presentation
library(dplyr) # for data wrangling
library(tidyverse) # for data wrangling
# 1. Rename colnames
colnames(budget_table) <- c("Expenses", "Total_CH", "Total_Percentage")
# 2. Group expense types
budget_table <- budget_table %>%
mutate(Grouped_Expenses = case_when(
Expenses %in% c("Mandatory contributions (OASI, etc.)", "Various fees", "Other insurances", "Life insurance") ~ "Insurances & AVS",
Expenses %in% c("Housing and utilities (primary residence)", "Homemaking", "Housing and utilities (secondary residence)") ~ "Rent",
Expenses %in% c("Groceries", "Soft drinks") ~ "Food & Beverage",
Expenses %in% c("Entertainment, recreation, and cultural activities", "Travel accommodations", "Donations, gifts, hosting") ~ "Leisure",
Expenses %in% c("Vehicle purchases and maintenance", "Other transportation costs") ~ "Transport",
Expenses == "Healthcare" ~ "Healthcare",
Expenses == "Communications" ~ "Communications",
Expenses == "Alimony and child support" ~ "Alimony and child support",
Expenses == "Alcoholic drinks and tobacco" ~ "Alcoholic drinks and tobacco",
Expenses %in% c("Home administration", "Other goods and services", "Clothing and shoes") ~ "Current household expenses",
Expenses == "School and education" ~ "School",
TRUE ~ as.character(Expenses)
))
# 3. Aggregate data
aggregated_data <- budget_table %>%
group_by(Grouped_Expenses) %>%
summarise(Total_CH = sum(as.numeric(gsub("CH ", "", Total_CH))),
Total_Percentage = sum(as.numeric(gsub("%", "", Total_Percentage))))
View(aggregated_data)
library(rvest) # for webscraping
library(kableExtra) # for data presentation
library(dplyr) # for data wrangling
library(tidyverse) # for data wrangling
# https://www.moneyland.ch/robots.txt, no mention of webscraping forbidden.
# The ToS mention this : "The content may be viewed or printed, provided that it is intended exclusively for personal, non-commercial use."
# Webscraping seems to be authorized.
# Web scrape the moneyland website
url <- "https://www.moneyland.ch/en/money-budget-household-savings-switzerland"
budget_table <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
# Print the table using kableExtra
kableExtra::kable(budget_table, format = "html")
colnames(budget_table) <- c("Expenses", "Per_month_average", "Portion_of_budget")
budget_table$Per_month_average <- as.numeric(budget_table$Per_month_average)
budget_table$Portion_of_budget <- as.numeric(budget_table$Portion_of_budget)
# Web scrape the moneyland website
url <- "https://www.moneyland.ch/en/money-budget-household-savings-switzerland"
budget_table <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
# Print the table using kableExtra
kableExtra::kable(budget_table, format = "html")
# Perform some data wrangling to get the final categories
# 1. Rename colnames
colnames(budget_table) <- c("Expenses", "Per_month_average", "Portion_of_budget")
budget_table$Per_month_average <- as.numeric(gsub("[^0-9.]", "", budget_table$Per_month_average))
budget_table$Portion_of_budget <- as.numeric(gsub(",", ".", gsub("[^0-9.]", "", budget_table$Portion_of_budget)))
budget_table <- budget_table %>%
mutate(Grouped_Expenses = case_when(
Expenses %in% c("Mandatory contributions (OASI, etc.)", "Various fees", "Other insurances", "Life insurance") ~ "Insurances & AVS",
Expenses %in% c("Housing and utilities (primary residence)", "Homemaking", "Housing and utilities (secondary residence)") ~ "Rent",
Expenses %in% c("Groceries", "Soft drinks") ~ "Food & Beverage",
Expenses %in% c("Entertainment, recreation, and cultural activities", "Travel accommodations", "Donations, gifts, hosting") ~ "Leisure",
Expenses %in% c("Vehicle purchases and maintenance", "Other transportation costs") ~ "Transport",
Expenses == "Healthcare" ~ "Healthcare",
Expenses == "Communications" ~ "Communications",
Expenses == "Alimony and child support" ~ "Alimony and child support",
Expenses == "Alcoholic drinks and tobacco" ~ "Alcoholic drinks and tobacco",
Expenses %in% c("Home administration", "Other goods and services", "Clothing and shoes") ~ "Current household expenses",
Expenses == "School and education" ~ "School",
TRUE ~ as.character(Expenses)
))
aggregated_data <- budget_table %>%
group_by(Grouped_Expenses) %>%
summarise(Total_CH = sum(as.numeric(gsub("CH ", "", Total_CH))),
Total_Percentage = sum(as.numeric(gsub("%", "", Total_Percentage))))
aggregated_data <- budget_table %>%
group_by(Grouped_Expenses) %>%
summarise(Total_CH = sum(as.numeric(gsub("CH ", "", Per_month_average))),
Total_Percentage = sum(as.numeric(gsub("%", "", Portion_of_budget))))
swiss_budget <- budget_table %>%
group_by(Grouped_Expenses) %>%
summarise(Total_CH = sum(as.numeric(gsub("CH ", "", Per_month_average))),
Total_Percentage = sum(as.numeric(gsub("%", "", Portion_of_budget))))
View(swiss_budget)
write.csv(swiss_budget, "swiss_budget.csv", row.names = FALSE)
# 3. Group expense types
budget_table <- budget_table %>%
mutate(Grouped_Expenses = case_when(
Expenses %in% c("Mandatory contributions (OASI, etc.)", "Various fees", "Other insurances", "Life insurance") ~ "Insurances & AVS",
Expenses %in% c("Housing and utilities (primary residence)", "Homemaking", "Housing and utilities (secondary residence)") ~ "Rent",
Expenses %in% c("Groceries", "Soft drinks") ~ "Food & Beverage",
Expenses == "Entertainment, recreation, and cultural activities" ~ "Leisure",
Expenses %in% c("Vehicle purchases and maintenance", "Other transportation costs") ~ "Transport",
Expenses == "Healthcare" ~ "Healthcare",
Expenses == "Travel accommodations" ~ "Travel",
Expenses %in% c( "Donations, gifts, hosting", "Alimony and child support")  ~ "Donations and child support",
Expenses == "Communications" ~ "Communications",
Expenses == "Alcoholic drinks and tobacco" ~ "Alcoholic drinks and tobacco",
Expenses %in% c("Home administration", "Other goods and services") ~ "Current household expenses",
Expenses == "Clothing and shoes" ~ "Clothing and shoes",
Expenses == "School and education" ~ "School and education",
TRUE ~ as.character(Expenses)
))
library(rvest) # for webscraping
library(kableExtra) # for data presentation
library(dplyr) # for data wrangling
library(tidyverse) # for data wrangling
# https://www.moneyland.ch/robots.txt, no mention of webscraping forbidden.
# The ToS mention this : "The content may be viewed or printed, provided that it is intended exclusively for personal, non-commercial use."
# Webscraping seems to be authorized.
# Web scrape the moneyland website
url <- "https://www.moneyland.ch/en/money-budget-household-savings-switzerland"
budget_table <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
# Print the table using kableExtra
kableExtra::kable(budget_table, format = "html")
# Perform some data wrangling to get the final categories
# 1. Rename colnames
colnames(budget_table) <- c("Expenses", "Per_month_average", "Portion_of_budget")
# 2. Convert data
budget_table$Per_month_average <- as.numeric(gsub("[^0-9.]", "", budget_table$Per_month_average))
budget_table$Portion_of_budget <- as.numeric(gsub(",", ".", gsub("[^0-9.]", "", budget_table$Portion_of_budget)))
# 3. Group expense types
budget_table <- budget_table %>%
mutate(Grouped_Expenses = case_when(
Expenses %in% c("Mandatory contributions (OASI, etc.)", "Various fees", "Other insurances", "Life insurance") ~ "Insurances & AVS",
Expenses %in% c("Housing and utilities (primary residence)", "Homemaking", "Housing and utilities (secondary residence)") ~ "Rent",
Expenses %in% c("Groceries", "Soft drinks") ~ "Food & Beverage",
Expenses == "Entertainment, recreation, and cultural activities" ~ "Leisure",
Expenses %in% c("Vehicle purchases and maintenance", "Other transportation costs") ~ "Transport",
Expenses == "Healthcare" ~ "Healthcare",
Expenses == "Travel accommodations" ~ "Travel",
Expenses %in% c( "Donations, gifts, hosting", "Alimony and child support")  ~ "Donations and child support",
Expenses == "Communications" ~ "Communications",
Expenses == "Alcoholic drinks and tobacco" ~ "Alcoholic drinks and tobacco",
Expenses %in% c("Home administration", "Other goods and services") ~ "Current household expenses",
Expenses == "Clothing and shoes" ~ "Clothing and shoes",
Expenses == "School and education" ~ "School and education",
TRUE ~ as.character(Expenses)
))
# 4. Aggregate data
swiss_budget <- budget_table %>%
group_by(Grouped_Expenses) %>%
summarise(Total_CH = sum(as.numeric(gsub("CH ", "", Per_month_average))),
Total_Percentage = sum(as.numeric(gsub("%", "", Portion_of_budget))))
# Create the CSV document
write.csv(swiss_budget, "swiss_budget.csv", row.names = FALSE)
View(swiss_budget)
